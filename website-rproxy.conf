# Test new NGINX configuration file
# nginx -c /etc/nginx/conf.d/website-rproxy.conf -t

# Refresh NGINX with new configuration
# sudo nginx -s reload
# sudo service nginx reload

upstream site1 {
    zone stream_site1 64k;
    keepalive 17;
    server site1.site-prod.com;
}

server {
  listen 443 ssl reuseport;
  server_name publicsite1.com www.publicsite1.com;
    ssl_certificate /etc/nginx/ssl/publicsite-bundle.crt;
    ssl_certificate_key /etc/nginx/ssl/publicsite.key;   
    
    # Following security configuration pulled from:
    # https://wiki.mozilla.org/Security/Server_Side_TLS
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    
    # Intermediate configuration. 
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # SSL Session Cache
    ssl_session_timeout 6h;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # run: openssl dhparam -out dhparam.pem 2048
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/nginx/ssl/DigiCertCA.crt;

    # Disable temporary files
    proxy_max_temp_file_size 0;

  location / {
    proxy_cache simplifi_cache;
    proxy_cache_revalidate on;
    proxy_cache_background_update on;
    proxy_cache_lock on;
    proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    proxy_pass http://site1;
  }
}

server {
  listen 80 reuseport;
  server_name publicsite1.com www.publicsite1.com;
  return 301 https://$server_name$request_uri;  
}
